"use strict";(self.webpackChunkCnosDB=self.webpackChunkCnosDB||[]).push([[5078],{4137:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),i=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=i(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=i(n),k=r,c=u["".concat(p,".").concat(k)]||u[k]||d[k]||l;return n?a.createElement(c,s(s({ref:t},m),{},{components:n})):a.createElement(c,s({ref:t},m))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:r,s[1]=o;for(var i=2;i<l;i++)s[i]=n[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},1217:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>i});var a=n(7462),r=(n(7294),n(4137));const l={sidebar_position:7},s="Tenant and Permission",o={unversionedId:"manage/tenant",id:"manage/tenant",title:"Tenant and Permission",description:"All the following operations are performed in the CnosDB Cli.",source:"@site/docs/manage/tenant.md",sourceDirName:"manage",slug:"/manage/tenant",permalink:"/docs/manage/tenant",draft:!1,editUrl:"https://github.com/cnosdb/docs/docs/manage/tenant.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Monitor",permalink:"/docs/manage/monitor"},next:{title:"Reference",permalink:"/docs/category/reference"}},p={},i=[{value:"Tenant and User",id:"tenant-and-user",level:2},{value:"Tenant",id:"tenant",level:2},{value:"Show Tenant",id:"show-tenant",level:3},{value:"Example",id:"example",level:4},{value:"Create Tenant",id:"create-tenant",level:3},{value:"Alter Tenant",id:"alter-tenant",level:3},{value:"Drop Tenant",id:"drop-tenant",level:3},{value:"User",id:"user",level:2},{value:"Show User",id:"show-user",level:3},{value:"Example",id:"example-1",level:4},{value:"Create User",id:"create-user",level:3},{value:"Alter User",id:"alter-user",level:3},{value:"Alter User Parameters",id:"alter-user-parameters",level:4},{value:"Drop User",id:"drop-user",level:3},{value:"Role of Tenant",id:"role-of-tenant",level:2},{value:"Show Role",id:"show-role",level:3},{value:"Example",id:"example-2",level:4},{value:"Create Role",id:"create-role",level:3},{value:"Drop Role",id:"drop-role",level:3},{value:"Permission",id:"permission",level:2},{value:"Database Permission",id:"database-permission",level:3},{value:"Grant Permission",id:"grant-permission",level:3},{value:"Show Permission",id:"show-permission",level:3},{value:"Revoke Permission",id:"revoke-permission",level:3},{value:"Alter Role",id:"alter-role",level:3},{value:"Alter a User With a Role Under a Tenant",id:"alter-a-user-with-a-role-under-a-tenant",level:4},{value:"Alter the User Out of the Role Under the Tenant",id:"alter-the-user-out-of-the-role-under-the-tenant",level:4}],m={toc:i},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tenant-and-permission"},"Tenant and Permission"),(0,r.kt)("p",null,"All the following operations are performed in the CnosDB Cli."),(0,r.kt)("h2",{id:"tenant-and-user"},"Tenant and User"),(0,r.kt)("p",null,"CnosDB provides a tenant system and a user system."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Only users with system permissions can add users and tenants.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Only a user who holds the role of owner under a tenant or a user with system permissions can add a role under a tenant and give a user a role.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"CnosDB instance starts with a tenant 'cnosdb' and a user 'root' by default."))),(0,r.kt)("h2",{id:"tenant"},"Tenant"),(0,r.kt)("h3",{id:"show-tenant"},"Show Tenant"),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT *\nFROM cluster_schema.tenants;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'+-------------+---------------------------------------------------+\n| tenant_name | tenant_options                                    |\n+-------------+---------------------------------------------------+\n| cnosdb      | {"comment":"system tenant","limiter_config":null} |\n+-------------+---------------------------------------------------+\n')),(0,r.kt)("h3",{id:"create-tenant"},"Create Tenant"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE\nTENANT [IF NOT EXISTS] tenant_name [WITH comment = ''];\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE\nTENANT test;\nSELECT *\nFROM cluster_schema.tenants;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'+-------------+---------------------------------------------------+\n| tenant_name | tenant_options                                    |\n+-------------+---------------------------------------------------+\n| test        | {"comment":null,"limiter_config":null}            |\n| cnosdb      | {"comment":"system tenant","limiter_config":null} |\n+-------------+---------------------------------------------------+\n')),(0,r.kt)("h3",{id:"alter-tenant"},"Alter Tenant"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER\nTENANT test SET COMMENT = 'abc';\n")),(0,r.kt)("h3",{id:"drop-tenant"},"Drop Tenant"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DROP\nTENANT tenant_name;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DROP\nTENANT test;\n")),(0,r.kt)("h2",{id:"user"},"User"),(0,r.kt)("h3",{id:"show-user"},"Show User"),(0,r.kt)("h4",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT *\nFROM cluster_schema.users;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'+-----------+----------+-------------------------------------------------------------------------------------------------+\n| user_name | is_admin | user_options                                                                                    |\n+-----------+----------+-------------------------------------------------------------------------------------------------+\n| root      | true     | {"password":"*****","must_change_password":true,"rsa_public_key":null,"comment":"system admin"} |\n+-----------+----------+-------------------------------------------------------------------------------------------------+\n')),(0,r.kt)("h3",{id:"create-user"},"Create User"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE\nUSER [IF NOT EXISTS] user_name [WITH [PASSWORD='',] [MUST_CHANGE_PASSWORD=true,] [COMMENT = '']];\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE\nUSER IF NOT EXISTS tester WITH PASSWORD='xxx', MUST_CHANGE_PASSWORD=true, COMMENT = 'test';\n")),(0,r.kt)("h3",{id:"alter-user"},"Alter User"),(0,r.kt)("h4",{id:"alter-user-parameters"},"Alter User Parameters"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER\nUSER user_name SET {PASSWORD = ''| MUST_CHANGE_PASSWORD = {true | false}| COMMENT = ''} = \n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER\nUSER tester SET PASSWORD = 'aaa';\nALTER\nUSER tester SET MUST_CHANGE_PASSWORD = false;\nALTER\nUSER tester SET COMMENT = 'bbb';\n")),(0,r.kt)("h3",{id:"drop-user"},"Drop User"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DROP\nUSER [IF EXISTS] user_name;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DROP\nUSER IF EXISTS tester;\n")),(0,r.kt)("h2",{id:"role-of-tenant"},"Role of Tenant"),(0,r.kt)("p",null,"The roles under the tenant are divided into system roles and user-defined roles."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"System roles:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Owner: This has top-level permissions on the tenant and supports all actions under the tenant."),(0,r.kt)("li",{parentName:"ul"},"Member: A tenant member that can browse various objects under a tenant."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"User-defined roles:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Custom roles need to inherit from system roles."),(0,r.kt)("li",{parentName:"ul"},"Multiple permissions can be given to custom roles.")))),(0,r.kt)("h3",{id:"show-role"},"Show Role"),(0,r.kt)("p",null,"View the roles under the current tenant."),(0,r.kt)("h4",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"\\c\ninformation_schema\nSELECT *\nFROM roles;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"+------------+-----------+--------------+\n| role_name  | role_type | inherit_role |\n+------------+-----------+--------------+\n| owner      | system    |              |\n| member     | system    |              |\n+------------+-----------+--------------+\n")),(0,r.kt)("h3",{id:"create-role"},"Create Role"),(0,r.kt)("p",null,"Only DBA and the owner of tenant can creat a new role, the new role is belonged to tenant."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE ROLE [IF NOT EXISTS] role_name INHERIT {owner | member};\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("p",null,"Create the owner_role under the current tenant that inherits from the owner role."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE ROLE owner_role INHERIT owner;\n")),(0,r.kt)("p",null,"Create the member_role role that inherits from the member role under the current tenant."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE ROLE member_role INHERIT member;\n")),(0,r.kt)("h3",{id:"drop-role"},"Drop Role"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DROP ROLE role_name;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DROP ROLE owner_role;\n")),(0,r.kt)("h2",{id:"permission"},"Permission"),(0,r.kt)("p",null,"You can use ",(0,r.kt)("inlineCode",{parentName:"p"},"GRANT... ")," To give permissions to roles under the tenant, use ",(0,r.kt)("inlineCode",{parentName:"p"},"REVOKE... ")," Revoke permissions."),(0,r.kt)("h3",{id:"database-permission"},"Database Permission"),(0,r.kt)("p",null,"The current smallest granularity of permissions is the database."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Content"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"read"),(0,r.kt)("td",{parentName:"tr",align:null},"Permission of reading from the database")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"write"),(0,r.kt)("td",{parentName:"tr",align:null},"Permission of writing to the database")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"all"),(0,r.kt)("td",{parentName:"tr",align:null},"All permission of the database")))),(0,r.kt)("h3",{id:"grant-permission"},"Grant Permission"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"GRANT\n{READ | WRITE | ALL} ON DATABASE database_name TO ROLE role_name;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- create a member rrr\nCREATE ROLE rrr INHERIT member;\n\n-- grant read permission of database air to rrr\nGRANT\nREAD\nON DATABASE air TO ROLE rrr;\n    \n-- grant write permission of database wind to rrr\nGRANT WRITE\nON DATABASE wind TO ROLE rrr;\n    \n-- grant all permission of database sea to rrr\nGRANT ALL\nON DATABASE sea TO ROLE rrr;\n")),(0,r.kt)("h3",{id:"show-permission"},"Show Permission"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"\\c\ninformation_schema\nSELECT *\nFROM DATABASE_PRIVILEGES;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"+-------------+---------------+----------------+-----------+\n| tenant_name | database_name | privilege_type | role_name |\n+-------------+---------------+----------------+-----------+\n| cnosdb      | air           | Read           | rrr       |\n| cnosdb      | sea           | All            | rrr       |\n| cnosdb      | wind          | Write          | rrr       |\n+-------------+---------------+----------------+-----------+\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Notice")),(0,r.kt)("p",null,"Granting permissions to a role on the same database overwrites previous permissions."),(0,r.kt)("h3",{id:"revoke-permission"},"Revoke Permission"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"REVOKE {WRITE | READ | FULL} ON DATABASE database_name FROM role_name;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- revoke read permission of database air from rrr\nREVOKE READ ON DATABASE air FROM rrr;\n")),(0,r.kt)("h3",{id:"alter-role"},"Alter Role"),(0,r.kt)("h4",{id:"alter-a-user-with-a-role-under-a-tenant"},"Alter a User With a Role Under a Tenant"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER\nTENANT tenant_name ADD USER user_name AS role_name;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE\nUSER user_a;\nALTER\nTENANT cnosdb ADD USER user_a AS ROLE rrr;\n")),(0,r.kt)("h4",{id:"alter-the-user-out-of-the-role-under-the-tenant"},"Alter the User Out of the Role Under the Tenant"),(0,r.kt)("p",null,"The role will not be removed only if the user no longer holds the role of tenant."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER\nTENANT tenant_name REMOVE USER user_name;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER\nTENANT cnosdb REMOVE USER user_a;\n")))}d.isMDXComponent=!0}}]);