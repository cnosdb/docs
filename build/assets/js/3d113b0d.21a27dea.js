"use strict";(self.webpackChunkCnosDB=self.webpackChunkCnosDB||[]).push([[6877],{4137:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>N});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(a),k=r,N=m["".concat(s,".").concat(k)]||m[k]||u[k]||o;return a?n.createElement(N,l(l({ref:t},c),{},{components:a})):n.createElement(N,l({ref:t},c))}));function N(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=k;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},2438:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=a(7462),r=(a(7294),a(4137));const o={sidebar_position:5},l="Backup and Restore",i={unversionedId:"manage/backup",id:"manage/backup",title:"Backup and Restore",description:"CnosDB can use SQL COPY INTO to export data to local or object stores, as well as import data from object stores and local filesystems.",source:"@site/docs/manage/backup.md",sourceDirName:"manage",slug:"/manage/backup",permalink:"/docs/manage/backup",draft:!1,editUrl:"https://github.com/cnosdb/docs/docs/manage/backup.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Cluster Shrink",permalink:"/docs/manage/cluster_shrink"},next:{title:"Monitor",permalink:"/docs/manage/monitor"}},s={},p=[{value:"Export",id:"export",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Examples",id:"examples",level:3},{value:"Import",id:"import",level:2},{value:"Syntax",id:"syntax-1",level:3},{value:"Examples",id:"examples-1",level:3},{value:"Object Store Examples",id:"object-store-examples",level:2},{value:"AWS S3",id:"aws-s3",level:3},{value:"Google Cloud Storage",id:"google-cloud-storage",level:3},{value:"Microsoft Azure",id:"microsoft-azure",level:3}],c={toc:p},m="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"backup-and-restore"},"Backup and Restore"),(0,r.kt)("p",null,"CnosDB can use SQL ",(0,r.kt)("inlineCode",{parentName:"p"},"COPY INTO")," to export data to local or object stores, as well as import data from object stores and local filesystems."),(0,r.kt)("p",null,"Supported file formats are CSV/JSON/PARQUET, and currently supported object stores are ",(0,r.kt)("inlineCode",{parentName:"p"},"AWS S3"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Google Cloud Storage"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Microsoft Azure"),"."),(0,r.kt)("h2",{id:"export"},"Export"),(0,r.kt)("h3",{id:"syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"COPY INTO externalLocation\n    FROM [<database>.]< table_name >\n    [ CONNECTION = ( connection_options ) ]\n    [ FILE_FORMAT = ( TYPE = { 'CSV' | 'NDJSON' | 'PARQUET'} [ formatTypeOptions ] ) ]\n    [ COPY_OPTIONS = ( copyOptions ) ]\n    \n    externalLocation (for Amazon S3) ::=\n    's3://<bucket>[/<path>]'\n    connection_options ::=\n    region = '<string>'\n    , access_key_id = '<string>'\n    , secret_key = '<string>'\n    [, endpoint_url = '<string>' ]\n    [, token = '<string>' ]\n    [, virtual_hosted_style = true | false ]\n    externalLocation (for Google Cloud Storage) ::=\n    'gcs://<bucket>[/<path>]'\n    connection_options ::=\n    gcs_base_url = '<string>'\n    [, disable_oauth = true | false ] -- \u9ed8\u8ba4 false\n    [, client_email = '<string>' ] -- \u5982\u679cdisable_oauth = false\uff0c\u6b64\u9879\u5fc5\u586b\n    [, private_key = '<string>' ] -- \u5982\u679cdisable_oauth = false\uff0c\u6b64\u9879\u5fc5\u586b\n\n    externalLocation (for Microsoft Azure) ::=\n    'azblob://<container>[/<path>]'\n    connection_options ::=\n    account = '<string>'\n    [, access_key = '<string>' ]\n    [, bearer_token = '<string>' ]\n    \n    copyOptions ::=\n    auto_infer_schema = true | false -- \u4ec5\u9002\u7528\u4e8ecopy into table\u8bed\u53e5\uff0c\u662f\u5426\u81ea\u52a8\u63a8\u65ad\u6587\u4ef6\u7684schema\uff0c\u5982\u679c\u4e3afalse\u5219\u4f7f\u7528\u76ee\u6807\u8868\u7684schema\uff08copy into table\u4e2d\u7684table\u5373\u4e3a\u76ee\u6807\u8868\n    \n    formatTypeOptions ::=\n    DELIMITER = '<character>' -- \u4ec5\u9002\u7528\u4e8ecsv\u6587\u4ef6\uff0c\u6587\u4ef6\u5206\u5272\u7b26\uff0c\u4e3a\u5355\u4e2a\u5b57\u7b26\n    WITH_HEADER = true | false -- \u4ec5\u9002\u7528\u4e8ecsv\u6587\u4ef6\uff0c\u662f\u5426\u5e26\u6709\u8868\u5934\uff0c\u9ed8\u8ba4\u4e3atrue\n\n")),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"export-as-csv"},"Export as CSV"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"COPY INTO 'file:///tmp/air' FROM air\n    FILE_FORMAT = (TYPE = 'CSV', DELIMITER = ',');\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"export-as-parquet"},"Export as PARQUET"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"COPY INTO 'file:///tmp/air' FROM air\n    FILE_FORMAT = (TYPE = 'PARQUET');\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"export-as-json"},"Export as JSON"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"COPY INTO 'file:///tmp/air' FROM air\n    FILE_FORMAT = (TYPE = 'JSON');\n")))),(0,r.kt)("h2",{id:"import"},"Import"),(0,r.kt)("h3",{id:"syntax-1"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"COPY INTO [<database>.]< table_name >\n    FROM externalLocation\n    [ CONNECTION = ( connection_options ) ]\n    [ FILE_FORMAT = ( TYPE = { 'CSV' | 'NDJSON' | 'PARQUET' } [ formatTypeOptions ] ) ]\n    [ COPY_OPTIONS = ( copyOptions ) ]\n    externalLocation (for Amazon S3) ::=\n    's3://<bucket>[/<path>]'\n    connection_options ::=\n    region = '<string>'\n    , access_key_id = '<string>'\n    , secret_key = '<string>'\n    [, token = '<string>' ]\n    [, virtual_hosted_style = true | false ]\n    externalLocation (for Google Cloud Storage) ::=\n    'gcs://<bucket>[/<path>]'\n    connection_options ::=\n    gcs_base_url = '<string>'\n    [, disable_oauth = true | false ] -- \u9ed8\u8ba4 false\n    [, client_email = '<string>' ] -- \u5982\u679cdisable_oauth = false\uff0c\u6b64\u9879\u5fc5\u586b\n    [, private_key = '<string>' ] -- \u5982\u679cdisable_oauth = false\uff0c\u6b64\u9879\u5fc5\u586b\n\n    externalLocation (for Microsoft Azure) ::=\n    'azblob://<container>[/<path>]'\n    connection_options ::=\n    account = '<string>'\n    [, access_key = '<string>' ]\n    [, bearer_token = '<string>' ]\n\n    copyOptions ::= \n    auto_infer_schema = true | false -- \u4ec5\u9002\u7528\u4e8ecopy into table\u8bed\u53e5\uff0c\u662f\u5426\u81ea\u52a8\u63a8\u65ad\u6587\u4ef6\u7684schema\uff0c\u5982\u679c\u4e3afalse\u5219\u4f7f\u7528\u76ee\u6807\u8868\u7684schema\uff08copy into table\u4e2d\u7684table\u5373\u4e3a\u76ee\u6807\u8868\uff09\n    \n    formatTypeOptions ::=\n    DELIMITER = '<character>' -- \u4ec5\u9002\u7528\u4e8ecsv\u6587\u4ef6\uff0c\u6587\u4ef6\u5206\u5272\u7b26\uff0c\u4e3a\u5355\u4e2a\u5b57\u7b26\n    WITH_HEADER = true | false -- \u4ec5\u9002\u7528\u4e8ecsv\u6587\u4ef6\uff0c\u662f\u5426\u5e26\u6709\u8868\u5934\uff0c\u9ed8\u8ba4\u4e3atrue\n    \n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Notice"),"\uff1aBefore importing, make sure the target table already exists and that the column names match the column types."),(0,r.kt)("h3",{id:"examples-1"},"Examples"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"import-csv"},"Import CSV"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"COPY INTO air FROM 'file:///tmp/air/'\n    FILE_FORMAT = (TYPE = 'CSV', DELIMITER = ',');\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"import-parquet"},"Import PARQUET"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"COPY INTO air FROM 'file:///tmp/air/'\n    FILE_FORMAT = (TYPE = 'PARQUET', DELIMITER = ',');\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"import-json"},"Import JSON"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"COPY INTO air FROM 'file:///tmp/air/'\n    FILE_FORMAT = (TYPE = 'JSON', DELIMITER = ',');\n")))),(0,r.kt)("h2",{id:"object-store-examples"},"Object Store Examples"),(0,r.kt)("h3",{id:"aws-s3"},"AWS S3"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"import-1"},"Import"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"COPY INTO air FROM 's3://test/air/'\n    CONNECTION = (\n    region = 'us\u2011east\u20111',\n    access_key_id = '****************',\n    secret_key = '****************'\n    )\n    FILE_FORMAT = (TYPE = 'CSV');\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"export-1"},"Export"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"COPY INTO 's3://test/air' FROM air\n    CONNECTION = (\n    region = 'us\u2011east\u20111',\n    access_key_id = '****************',\n    secret_key = '****************'\n    )\n    FILE_FORMAT = (TYPE = 'CSV');\n")))),(0,r.kt)("h3",{id:"google-cloud-storage"},"Google Cloud Storage"),(0,r.kt)("p",null,"There are four parameters in the connection options for Google Cloud Storage:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"gcs_base_url")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"disable_oauth\uff1a Turn off validation switch. If ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"client_email"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"private_key")," parameters must be specified.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"client_email")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"private_key")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"import-2"},"Import"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"COPY INTO air FROM 'gcs://test/air/'\n    CONNECTION = (\n    gcs_base_url = 'http://localhost:4443',\n    disable_oauth = true\n    )\n    FILE_FORMAT = (TYPE = 'CSV');\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"export-2"},"Export"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"COPY INTO 'gcs://test/air' FROM air\n    CONNECTION = (\n    gcs_base_url = 'http://localhost:4443',\n    disable_oauth = true\n    )\n    FILE_FORMAT = (TYPE = 'CSV');\n")))),(0,r.kt)("h3",{id:"microsoft-azure"},"Microsoft Azure"),(0,r.kt)("p",null,"There four parameters in the connection options for Microsoft Azure:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"account")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"access_key")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"bearer_token")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"use_emulator The default is ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),", and when ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", the url uses the environment variable",(0,r.kt)("inlineCode",{parentName:"p"}," AZURITE_BLOB_STORAGE_URL")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"http://127.0.0.1:10000")," .")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"import-3"},"Import"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"COPY INTO air FROM 'azblob://test/air/'\n    CONNECTION = (\n        account = 'devstoreaccount1',\n        access_key = '*****'\n    )\n    FILE_FORMAT = (TYPE = 'CSV'); \n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"export-3"},"Export"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"COPY INTO 'azblob://test/air/' FROM air\n    CONNECTION = (\n        account = 'devstoreaccount1',\n        access_key = '*****'\n    )\n    FILE_FORMAT = (TYPE = 'CSV'); \n")))))}u.isMDXComponent=!0}}]);