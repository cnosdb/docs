"use strict";(self.webpackChunkCnosDB=self.webpackChunkCnosDB||[]).push([[8119],{4137:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>N});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var d=n.createContext({}),p=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=p(t.components);return n.createElement(d.Provider,{value:e},t.children)},u="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),u=p(a),k=r,N=u["".concat(d,".").concat(k)]||u[k]||s[k]||l;return a?n.createElement(N,i(i({ref:e},m),{},{components:a})):n.createElement(N,i({ref:e},m))}));function N(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=k;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=t,o[u]="string"==typeof t?t:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},1705:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(4137));const l={sidebar_position:6},i="Monitor",o={unversionedId:"manage/monitor",id:"manage/monitor",title:"Monitor",description:"Currently, CnosDB metrics can be collected by Prometheus or stored on CnosDB.",source:"@site/docs/manage/monitor.md",sourceDirName:"manage",slug:"/manage/monitor",permalink:"/docs/manage/monitor",draft:!1,editUrl:"https://github.com/cnosdb/docs/docs/manage/monitor.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Backup and Restore",permalink:"/docs/manage/backup"},next:{title:"Tenant and Permission",permalink:"/docs/manage/tenant"}},d={},p=[{value:"Data Node Monitor Metrics",id:"data-node-monitor-metrics",level:2},{value:"DISK_STORAGE",id:"disk_storage",level:3},{value:"Name",id:"name",level:4},{value:"Type",id:"type",level:4},{value:"Discription",id:"discription",level:4},{value:"Tag",id:"tag",level:4},{value:"DATA_IN",id:"data_in",level:3},{value:"Name",id:"name-1",level:4},{value:"Type",id:"type-1",level:4},{value:"Discription",id:"discription-1",level:4},{value:"Tag",id:"tag-1",level:4},{value:"DATA_OUT",id:"data_out",level:3},{value:"Name",id:"name-2",level:4},{value:"Type",id:"type-2",level:4},{value:"Discription",id:"discription-2",level:4},{value:"Tag",id:"tag-2",level:4},{value:"QUERIES",id:"queries",level:3},{value:"Name",id:"name-3",level:4},{value:"Type",id:"type-3",level:4},{value:"Discription",id:"discription-3",level:4},{value:"Tag",id:"tag-3",level:4},{value:"WRITES",id:"writes",level:3},{value:"Name",id:"name-4",level:4},{value:"Type",id:"type-4",level:4},{value:"Discription",id:"discription-4",level:4},{value:"Tag",id:"tag-4",level:4},{value:"Prometheus Monitor",id:"prometheus-monitor",level:2},{value:"Store to CnosDB",id:"store-to-cnosdb",level:2}],m={toc:p},u="wrapper";function s(t){let{components:e,...a}=t;return(0,r.kt)(u,(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"monitor"},"Monitor"),(0,r.kt)("p",null,"Currently, CnosDB metrics can be collected by Prometheus or stored on CnosDB."),(0,r.kt)("p",null,"If you would like to see more metrics supported by CnosDB, please send an ISSUE to the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cnosdb"},"repository"),"."),(0,r.kt)("h2",{id:"data-node-monitor-metrics"},"Data Node Monitor Metrics"),(0,r.kt)("h3",{id:"disk_storage"},"DISK_STORAGE"),(0,r.kt)("h4",{id:"name"},"Name"),(0,r.kt)("p",null,"disk_storage"),(0,r.kt)("h4",{id:"type"},"Type"),(0,r.kt)("p",null,"Gauge"),(0,r.kt)("h4",{id:"discription"},"Discription"),(0,r.kt)("p",null,"The disk that the Vnode occupies."),(0,r.kt)("h4",{id:"tag"},"Tag"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Discription"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DATABASE"),(0,r.kt)("td",{parentName:"tr",align:null},"Database vnode belongs to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NODE_ID"),(0,r.kt)("td",{parentName:"tr",align:null},"ID of data node")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TENANT"),(0,r.kt)("td",{parentName:"tr",align:null},"tenant vnode belongs to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"VNODE_ID"),(0,r.kt)("td",{parentName:"tr",align:null},"ID of Vnode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"VALUE"),(0,r.kt)("td",{parentName:"tr",align:null},"Disk that the Vnode occupies.")))),(0,r.kt)("h3",{id:"data_in"},"DATA_IN"),(0,r.kt)("h4",{id:"name-1"},"Name"),(0,r.kt)("p",null,"data_in"),(0,r.kt)("h4",{id:"type-1"},"Type"),(0,r.kt)("p",null,"Count"),(0,r.kt)("h4",{id:"discription-1"},"Discription"),(0,r.kt)("p",null,"The total size of the written traffic when data is written to the database."),(0,r.kt)("h4",{id:"tag-1"},"Tag"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Discription"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TIME"),(0,r.kt)("td",{parentName:"tr",align:null},"Time of data_in")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DATABASE"),(0,r.kt)("td",{parentName:"tr",align:null},"DatabaseName")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NODE_ID"),(0,r.kt)("td",{parentName:"tr",align:null},"ID of data node")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TENANT"),(0,r.kt)("td",{parentName:"tr",align:null},"Tenant name the database belongs to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"VALUE"),(0,r.kt)("td",{parentName:"tr",align:null},"The total size of the write traffic in Bytes")))),(0,r.kt)("h3",{id:"data_out"},"DATA_OUT"),(0,r.kt)("h4",{id:"name-2"},"Name"),(0,r.kt)("p",null,"data_out"),(0,r.kt)("h4",{id:"type-2"},"Type"),(0,r.kt)("p",null,"Count"),(0,r.kt)("h4",{id:"discription-2"},"Discription"),(0,r.kt)("p",null,"Total outflow traffic for reading data from the database."),(0,r.kt)("h4",{id:"tag-2"},"Tag"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Discription"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TIME"),(0,r.kt)("td",{parentName:"tr",align:null},"Time of data out")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DATABASE"),(0,r.kt)("td",{parentName:"tr",align:null},"Database name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NODE_ID"),(0,r.kt)("td",{parentName:"tr",align:null},"ID of data node")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TENANT"),(0,r.kt)("td",{parentName:"tr",align:null},"Tenant name the database belongs to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"VALUE"),(0,r.kt)("td",{parentName:"tr",align:null},"The total size of the read traffic in Bytes")))),(0,r.kt)("h3",{id:"queries"},"QUERIES"),(0,r.kt)("h4",{id:"name-3"},"Name"),(0,r.kt)("p",null,"queries"),(0,r.kt)("h4",{id:"type-3"},"Type"),(0,r.kt)("p",null,"Count"),(0,r.kt)("h4",{id:"discription-3"},"Discription"),(0,r.kt)("p",null,"The times the user queries from the database."),(0,r.kt)("h4",{id:"tag-3"},"Tag"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Discription"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TIME"),(0,r.kt)("td",{parentName:"tr",align:null},"Time of queries")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DATABASE"),(0,r.kt)("td",{parentName:"tr",align:null},"Database name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NODE_ID"),(0,r.kt)("td",{parentName:"tr",align:null},"ID of data node")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TENANT"),(0,r.kt)("td",{parentName:"tr",align:null},"Tenant name the database belongs to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"USER"),(0,r.kt)("td",{parentName:"tr",align:null},"User name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"VALUE"),(0,r.kt)("td",{parentName:"tr",align:null},"The times the user queries from the database.")))),(0,r.kt)("h3",{id:"writes"},"WRITES"),(0,r.kt)("h4",{id:"name-4"},"Name"),(0,r.kt)("p",null,"writes"),(0,r.kt)("h4",{id:"type-4"},"Type"),(0,r.kt)("p",null,"Count"),(0,r.kt)("h4",{id:"discription-4"},"Discription"),(0,r.kt)("p",null,"The times the user writes to the database."),(0,r.kt)("h4",{id:"tag-4"},"Tag"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Discription"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TIME"),(0,r.kt)("td",{parentName:"tr",align:null},"Time of writes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DATABASE"),(0,r.kt)("td",{parentName:"tr",align:null},"Database name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NODE_ID"),(0,r.kt)("td",{parentName:"tr",align:null},"ID of data node")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TENANT"),(0,r.kt)("td",{parentName:"tr",align:null},"Tenant name the database belongs to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"USER"),(0,r.kt)("td",{parentName:"tr",align:null},"User name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"VALUE"),(0,r.kt)("td",{parentName:"tr",align:null},"The times the user writes to the database.")))),(0,r.kt)("h2",{id:"prometheus-monitor"},"Prometheus Monitor"),(0,r.kt)("p",null,"Just add Job at the Prometheus configuration file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"scrape_configs:\n  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.\n  - job_name: 'cnosdb'\n    static_configs:\n      - targets: ['127.0.0.1:31001']\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Params")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"targets")," is the adderss of CnosDB Http."),(0,r.kt)("h2",{id:"store-to-cnosdb"},"Store to CnosDB"),(0,r.kt)("p",null,"\u5728",(0,r.kt)("a",{parentName:"p",href:"cluster.md#%E9%85%8D%E7%BD%AE%E9%A1%B9-cluster"},"\u914d\u7f6e\u6587\u4ef6"),"\u4e2d\u4fee\u6539",(0,r.kt)("inlineCode",{parentName:"p"},"store_metrics"),"\u53c2\u6570\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," \uff08\u9ed8\u8ba4\u4e3atrue\uff09"))}s.isMDXComponent=!0}}]);